
.. Data Storage (session and local)

!
~!_gen/js/DataStorage.js~
/*
 *  PureJavacript, DataStorage.js
 *
 *  Copyright 2014 - 2017, CrossAdaptive
 */
~
!

~_gen/js/DataStorage.js~
var
DataStorage         = {}
DataStorage.Local   = {}
DataStorage.Session = {}
~


... Exists

|
DataStorage.Exists()
|

~_gen/js/DataStorage.js~
DataStorage.Exists
=
function()
{
	return typeof( Storage ) !== "undefined";
}
~


... Set item (local)

|
DataStorage.Local.SetItem( key, value )
|

~_gen/js/DataStorage.js~
DataStorage.Local.SetItem
=
function( key, value )
{
	var success = false;

	if ( typeof( Storage ) !== "undefined" )
	{
		if ( value || ("" == value.trim()) )
		{
			window.localStorage.setItem( key, value );
		
			success = (window.localStorage.key == value);
		}
	}
	return success;
}
~


... Get item (local)

|
DataStorage.GetItem( key )
|

~_gen/js/DataStorage.js~
DataStorage.Local.GetItem
=
function( key )
{
	var value = null;

	if ( DataStorage.Exists() )
	{
		value = window.localStorage.getItem( key );
	}
	return value;
}
~



... Remove item (local)

|
DataStorage.RemoveItem( key )
|

~_gen/js/DataStorage.js~
DataStorage.Local.RemoveItem
=
function( key )
{
	var success = false;

	if ( typeof( Storage ) !== "undefined" )
	{
		window.localStorage.removeItem( key );
		
		success = (window.localStorage.key == null);
	}
	return success;
}
~


... Has item (local)

|
DataStorage.Local.HasItem( key )
|

~_gen/js/DataStorage.js~
DataStorage.Local.HasItem
=
function( key )
{
	var success = false;

	if ( typeof( Storage ) !== "undefined" )
	{
		success = window.localStorage.hasOwnProperty( key );
	}
	return success;
}
~

... Set item (session)

|
DataStorage.Session.SetItem( key, value )
|

~_gen/js/DataStorage.js~
DataStorage.Session.SetItem
=
function( key, value )
{
	var success = false;

	if ( typeof( Storage ) !== "undefined" )
	{
		if ( value || ("" == value.trim()) )
		{
			window.sessionStorage.setItem( key, value );
		
			success = (window.sessionStorage.key == value);
		}
	}
	return success;
}
~

... Get item (session)

|
DataStorage.Session.GetItem( key )
|

~_gen/js/DataStorage.js~
DataStorage.Session.GetItem
=
function( key )
{
	var value = null;

	if ( DataStorage.Exists() )
	{
		value = window.sessionStorage.getItem( key );
	}
	return value;
}
~

... Remove item (session)

|
DataStorage.Session.RemoveItem( key )
|

~_gen/js/DataStorage.js~
DataStorage.Session.RemoveItem
=
function( key )
{
	var success = false;

	if ( typeof( Storage ) !== "undefined" )
	{
		window.sessionStorage.removeItem( key );
		
		success = (window.sessionStorage.key == null);
	}
	return success;
}
~

... Has item (session)

|
DataStorage.Session.HasItem( key )
|

~_gen/js/DataStorage.js~
DataStorage.Session.HasItem
=
function( key )
{
	var success = false;

	if ( typeof( Storage ) !== "undefined" )
	{
		success = window.sessionStorage.hasOwnProperty( key );
	}
	return success;
}
~

... Has item (session)

|
DataStorage.Session.HasItem( key )
|

~_gen/js/DataStorage.js~
DataStorage.SetSelectFilter
=
function( event )
{
    var select = event.target;
    var path   = location.pathname;
    var name   = select.name;
    var value  = select.options[select.selectedIndex].value;

    var key = name + "|" + path;

    if ( Session.user_hash )
    {
	    key = Session.user_hash + "|" + name + "|" + path;
	}

	DataStorage.Local.SetItem( key, value );

    location.reload();
}
~
